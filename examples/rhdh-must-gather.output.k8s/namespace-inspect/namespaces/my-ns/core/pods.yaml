---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      rhdh.redhat.com/ext-config-hash: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    creationTimestamp: "2025-10-23T09:44:56Z"
    generateName: backstage-my-rhdh-6457df4994-
    labels:
      pod-template-hash: 6457df4994
      rhdh.redhat.com/app: backstage-my-rhdh
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rhdh.redhat.com/ext-config-hash: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:pod-template-hash: {}
            f:rhdh.redhat.com/app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8dd88eda-99a6-49f8-8ab1-2c6909f411ed"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"backstage-backend"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"APP_CONFIG_backend_listen_port"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":7007,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:startupProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app-root/src/default.app-config.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/app-root/src/dynamic-plugins-root"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
              f:workingDir: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"install-dynamic-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"MAX_ENTRY_SIZE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NPM_CONFIG_USERCONFIG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dynamic-plugins-root"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/app-root/src/.config/containers"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/opt/app-root/src/.npm/_cacache"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/app-root/src/.npmrc.dynamic-plugins"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/app-root/src/dynamic-plugins.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
              f:workingDir: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"backstage-appconfig-my-rhdh"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"backstage-dynamic-plugins-my-rhdh"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"backstage-files-my-rhdh"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"dynamic-plugins-registry-auth"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"dynamic-plugins-root"}:
              .: {}
              f:ephemeral:
                .: {}
                f:volumeClaimTemplate:
                  .: {}
                  f:metadata:
                    .: {}
                    f:creationTimestamp: {}
                  f:spec:
                    .: {}
                    f:accessModes: {}
                    f:resources:
                      .: {}
                      f:requests:
                        .: {}
                        f:storage: {}
                    f:volumeMode: {}
              f:name: {}
            k:{"name":"npmcacache"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"temp"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: k3s
      operation: Update
      time: "2025-10-23T09:44:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.42.2.10"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: k3s
      operation: Update
      subresource: status
      time: "2025-10-23T09:49:14Z"
    name: backstage-my-rhdh-6457df4994-r2cps
    namespace: my-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: backstage-my-rhdh-6457df4994
      uid: 8dd88eda-99a6-49f8-8ab1-2c6909f411ed
    resourceVersion: "2091"
    uid: 984806e0-1225-4230-81ad-676b8bfcc9da
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - --config
      - dynamic-plugins-root/app-config.dynamic-plugins.yaml
      - --config
      - /opt/app-root/src/default.app-config.yaml
      env:
      - name: APP_CONFIG_backend_listen_port
        value: "7007"
      envFrom:
      - secretRef:
          name: backstage-psql-secret-my-rhdh
      image: quay.io/rhdh/rhdh-hub-rhel9:next
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /.backstage/health/v1/liveness
          port: backend
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 4
      name: backstage-backend
      ports:
      - containerPort: 7007
        name: backend
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /.backstage/health/v1/readiness
          port: backend
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 2
        timeoutSeconds: 4
      resources:
        limits:
          cpu: "1"
          ephemeral-storage: 5Gi
          memory: 2560Mi
        requests:
          cpu: 250m
          ephemeral-storage: 5Gi
          memory: 256Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      startupProbe:
        failureThreshold: 3
        httpGet:
          path: /.backstage/health/v1/liveness
          port: backend
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 4
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app-root/src/dynamic-plugins-root
        name: dynamic-plugins-root
      - mountPath: /tmp
        name: temp
      - mountPath: /opt/app-root/src/default.app-config.yaml
        name: backstage-appconfig-my-rhdh
        readOnly: true
        subPath: default.app-config.yaml
      workingDir: /opt/app-root/src
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - ./install-dynamic-plugins.sh
      - /dynamic-plugins-root
      env:
      - name: NPM_CONFIG_USERCONFIG
        value: /opt/app-root/src/.npmrc.dynamic-plugins/.npmrc
      - name: MAX_ENTRY_SIZE
        value: "30000000"
      image: quay.io/rhdh/rhdh-hub-rhel9:next
      imagePullPolicy: IfNotPresent
      name: install-dynamic-plugins
      resources:
        limits:
          cpu: "1"
          ephemeral-storage: 5Gi
          memory: 2560Mi
        requests:
          cpu: 250m
          ephemeral-storage: 5Gi
          memory: 256Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /dynamic-plugins-root
        name: dynamic-plugins-root
      - mountPath: /opt/app-root/src/.config/containers
        name: dynamic-plugins-registry-auth
        readOnly: true
      - mountPath: /opt/app-root/src/.npm/_cacache
        name: npmcacache
      - mountPath: /tmp
        name: temp
      - mountPath: /opt/app-root/src/dynamic-plugins.yaml
        name: backstage-dynamic-plugins-my-rhdh
        readOnly: true
        subPath: dynamic-plugins.yaml
      - mountPath: /opt/app-root/src/.npmrc.dynamic-plugins
        name: backstage-files-my-rhdh
      workingDir: /opt/app-root/src
    nodeName: k3d-local-1-agent-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - ephemeral:
        volumeClaimTemplate:
          metadata:
            creationTimestamp: null
          spec:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 2Gi
            volumeMode: Filesystem
      name: dynamic-plugins-root
    - name: dynamic-plugins-registry-auth
      secret:
        defaultMode: 416
        optional: true
        secretName: dynamic-plugins-registry-auth
    - emptyDir: {}
      name: npmcacache
    - emptyDir: {}
      name: temp
    - configMap:
        defaultMode: 420
        name: backstage-appconfig-my-rhdh
        optional: false
      name: backstage-appconfig-my-rhdh
    - configMap:
        defaultMode: 420
        name: backstage-dynamic-plugins-my-rhdh
        optional: false
      name: backstage-dynamic-plugins-my-rhdh
    - name: backstage-files-my-rhdh
      secret:
        defaultMode: 420
        optional: false
        secretName: backstage-files-my-rhdh
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-23T09:47:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-23T09:48:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-23T09:49:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-23T09:49:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-23T09:45:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3edcb7b9d7a04cca91771d4d5ef43a92ac80b7b53cb39883c9f41836fd60ee60
      image: quay.io/rhdh/rhdh-hub-rhel9:next
      imageID: quay.io/rhdh/rhdh-hub-rhel9@sha256:2f5852fc00afe3ae6dbb84be1389bef1937a337eba671d615d9045f4772c9b1a
      lastState: {}
      name: backstage-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-23T09:48:28Z"
      volumeMounts:
      - mountPath: /opt/app-root/src/dynamic-plugins-root
        name: dynamic-plugins-root
      - mountPath: /tmp
        name: temp
      - mountPath: /opt/app-root/src/default.app-config.yaml
        name: backstage-appconfig-my-rhdh
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.5
    hostIPs:
    - ip: 172.18.0.5
    initContainerStatuses:
    - containerID: containerd://9bd21752c12e3e924565497369aa8a9dcc4169f4616c054080328f70997d9f4a
      image: quay.io/rhdh/rhdh-hub-rhel9:next
      imageID: quay.io/rhdh/rhdh-hub-rhel9@sha256:2f5852fc00afe3ae6dbb84be1389bef1937a337eba671d615d9045f4772c9b1a
      lastState: {}
      name: install-dynamic-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://9bd21752c12e3e924565497369aa8a9dcc4169f4616c054080328f70997d9f4a
          exitCode: 0
          finishedAt: "2025-10-23T09:48:27Z"
          reason: Completed
          startedAt: "2025-10-23T09:47:24Z"
      volumeMounts:
      - mountPath: /dynamic-plugins-root
        name: dynamic-plugins-root
      - mountPath: /opt/app-root/src/.config/containers
        name: dynamic-plugins-registry-auth
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /opt/app-root/src/.npm/_cacache
        name: npmcacache
      - mountPath: /tmp
        name: temp
      - mountPath: /opt/app-root/src/dynamic-plugins.yaml
        name: backstage-dynamic-plugins-my-rhdh
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /opt/app-root/src/.npmrc.dynamic-plugins
        name: backstage-files-my-rhdh
    phase: Running
    podIP: 10.42.2.10
    podIPs:
    - ip: 10.42.2.10
    qosClass: Burstable
    startTime: "2025-10-23T09:45:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-10-23T09:44:56Z"
    generateName: backstage-psql-my-rhdh-
    labels:
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: backstage-psql-my-rhdh-784b8f4f75
      rhdh.redhat.com/app: backstage-psql-my-rhdh
      statefulset.kubernetes.io/pod-name: backstage-psql-my-rhdh-0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:rhdh.redhat.com/app: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"dbdfad67-4e03-4ab3-97e1-1d67e7e6f4bd"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"postgresql"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"PGDATA"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POSTGRESQL_PORT_NUMBER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POSTGRESQL_VOLUME_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":5432,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/shm"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/pgsql/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"data"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
            k:{"name":"dshm"}:
              .: {}
              f:emptyDir:
                .: {}
                f:medium: {}
              f:name: {}
      manager: k3s
      operation: Update
      time: "2025-10-23T09:44:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.42.1.7"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: k3s
      operation: Update
      subresource: status
      time: "2025-10-23T09:45:22Z"
    name: backstage-psql-my-rhdh-0
    namespace: my-ns
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: backstage-psql-my-rhdh
      uid: dbdfad67-4e03-4ab3-97e1-1d67e7e6f4bd
    resourceVersion: "1551"
    uid: a88e0d96-5c2e-449a-9ae1-8970034636b1
  spec:
    automountServiceAccountToken: false
    containers:
    - env:
      - name: POSTGRESQL_PORT_NUMBER
        value: "5432"
      - name: POSTGRESQL_VOLUME_DIR
        value: /var/lib/pgsql/data
      - name: PGDATA
        value: /var/lib/pgsql/data/userdata
      envFrom:
      - secretRef:
          name: backstage-psql-secret-my-rhdh
      image: quay.io/fedora/postgresql-15:latest
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - exec pg_isready -U ${POSTGRES_USER} -h 127.0.0.1 -p 5432
        failureThreshold: 6
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: postgresql
      ports:
      - containerPort: 5432
        name: tcp-postgresql
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - -e
          - |
            exec pg_isready -U ${POSTGRES_USER} -h 127.0.0.1 -p 5432
        failureThreshold: 6
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 250m
          ephemeral-storage: 20Mi
          memory: 1Gi
        requests:
          cpu: 250m
          ephemeral-storage: 20Mi
          memory: 256Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsGroup: 0
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /dev/shm
        name: dshm
      - mountPath: /var/lib/pgsql/data
        name: data
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: backstage-psql-my-rhdh-0
    nodeName: k3d-local-1-agent-1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
    serviceAccount: default
    serviceAccountName: default
    subdomain: backstage-psql-my-rhdh
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-backstage-psql-my-rhdh-0
    - emptyDir:
        medium: Memory
      name: dshm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-23T09:45:15Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-23T09:45:02Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-23T09:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-23T09:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-23T09:45:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d37d89d048c70d5d27c447e3dae73af684abca7b941fb42b7c376d010476f54c
      image: quay.io/fedora/postgresql-15:latest
      imageID: quay.io/fedora/postgresql-15@sha256:55f43bfb492e4e08bd420074ef05747aebe1218b56f00b3a103d2f430120d0a4
      lastState: {}
      name: postgresql
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-23T09:45:15Z"
      volumeMounts:
      - mountPath: /dev/shm
        name: dshm
      - mountPath: /var/lib/pgsql/data
        name: data
    hostIP: 172.18.0.3
    hostIPs:
    - ip: 172.18.0.3
    phase: Running
    podIP: 10.42.1.7
    podIPs:
    - ip: 10.42.1.7
    qosClass: Burstable
    startTime: "2025-10-23T09:45:02Z"
kind: PodList
metadata:
  resourceVersion: "4661"
