---
apiVersion: v1
items:
- apiVersion: v1
  data:
    default.app-config.yaml: |
      ###########################################################################################################
      # /!\ WARNING
      #
      # This is the default app-config file created and managed by the Operator for your CR.
      # Do NOT edit this manually in the Cluster, as your changes will be overridden by the Operator upon the
      # next reconciliation.
      # If you want to customize the application configuration, you should create your own app-config ConfigMap
      # and reference it in your CR.
      # See https://docs.redhat.com/en/documentation/red_hat_developer_hub/1.4/html/configuring/provisioning-and-using-your-custom-configuration#provisioning-your-custom-configuration
      # for more details.
      ###########################################################################################################
      backend:
        auth:
          externalAccess:
            - type: legacy
              options:
                subject: legacy-default-config
                # This is a default value, which you should change by providing your own app-config
                secret: "pl4s3Ch4ng3M3"
      auth:
        providers: {}
  kind: ConfigMap
  metadata:
    creationTimestamp: "2025-10-23T09:44:56Z"
    labels:
      app.kubernetes.io/instance: my-rhdh
      app.kubernetes.io/name: backstage
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:default.app-config.yaml: {}
        f:metadata:
          f:labels:
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
          f:ownerReferences:
            k:{"uid":"66af0070-357e-4be2-a571-6706ec838dcb"}: {}
      manager: backstage-controller
      operation: Apply
      time: "2025-10-23T09:44:56Z"
    name: backstage-appconfig-my-rhdh
    namespace: my-ns
    ownerReferences:
    - apiVersion: rhdh.redhat.com/v1alpha4
      blockOwnerDeletion: true
      controller: true
      kind: Backstage
      name: my-rhdh
      uid: 66af0070-357e-4be2-a571-6706ec838dcb
    resourceVersion: "1409"
    uid: 32cafd4b-0fac-416e-9751-3e01ad26cc1c
- apiVersion: v1
  data:
    dynamic-plugins.yaml: "includes:\n  - dynamic-plugins.default.yaml\nplugins:\n
      \ - disabled: true\n    package: \"@redhat/backstage-plugin-orchestrator@1.7.1\"\n
      \   integrity: sha512-Cqu9EQwVQ4mpdgWTUA0MW89Gul0IklhvkkqVoO3CloQ1dnAj1XyXikCphzH5TmNDDd9K66dOpaKKCaW9KeJ4WA==\n
      \   pluginConfig:\n      dynamicPlugins:\n          frontend:\n            red-hat-developer-hub.backstage-plugin-orchestrator:\n
      \             appIcons:\n                - importName: OrchestratorIcon\n                  name:
      orchestratorIcon\n              dynamicRoutes:\n                - importName:
      OrchestratorPage\n                  menuItem:\n                    icon: orchestratorIcon\n
      \                   text: Orchestrator\n                  path: /orchestrator\n
      \             entityTabs:\n                - path: /workflows\n                  title:
      Workflows\n                  mountPoint: entity.page.workflows\n              mountPoints:\n
      \               - mountPoint: entity.page.workflows/cards\n                  importName:
      OrchestratorCatalogTab\n                  config:\n                    layout:\n
      \                     gridColumn: '1 / -1'\n                      if:\n                        anyOf:\n
      \                         - IsOrchestratorCatalogTabAvailable\n  - disabled:
      true\n    package: \"@redhat/backstage-plugin-orchestrator-backend-dynamic@1.7.1\"\n
      \   integrity: sha512-9cXbedr0lC7ns7SNqARrWSQI4JGcZFw5xpfpUzA1tJaMMUjzAdPHTXqljf62/fs4hYBK8TJsWJ2KJkGVMzbrHQ==\n
      \   pluginConfig:\n      orchestrator:\n        dataIndexService:\n          url:
      http://sonataflow-platform-data-index-service\n    dependencies:\n      - ref:
      sonataflow\n  - disabled: true\n    package: \"@redhat/backstage-plugin-scaffolder-backend-module-orchestrator-dynamic@1.7.1\"\n
      \   integrity: sha512-J1sTjA5kj6DphG8D65go9KlpIfKyLN/wq+XlY5Cb5djEo8mvF3wn3Haf60OGFo5cP4OfRSWqFwT7LM5/dNVwAg==\n
      \   pluginConfig:\n      orchestrator:\n        dataIndexService:\n          url:
      http://sonataflow-platform-data-index-service               \n  - disabled:
      true\n    package: \"@redhat/backstage-plugin-orchestrator-form-widgets@1.7.1\"\n
      \   integrity: sha512-0KIXrZoJ+O4xNNzN/zB4+VMuaRPuiUviAmM+fIhTo/P9aLA36F9aIlyMbUbki49uaJ0zd8KXMBvmJSHZNrYkGQ==\n
      \   pluginConfig:\n      dynamicPlugins:\n        frontend:\n          red-hat-developer-hub.backstage-plugin-orchestrator-form-widgets:
      { }\n"
  kind: ConfigMap
  metadata:
    creationTimestamp: "2025-10-23T09:44:56Z"
    labels:
      app.kubernetes.io/instance: my-rhdh
      app.kubernetes.io/name: backstage
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:dynamic-plugins.yaml: {}
        f:metadata:
          f:labels:
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
          f:ownerReferences:
            k:{"uid":"66af0070-357e-4be2-a571-6706ec838dcb"}: {}
      manager: backstage-controller
      operation: Apply
      time: "2025-10-23T09:44:56Z"
    name: backstage-dynamic-plugins-my-rhdh
    namespace: my-ns
    ownerReferences:
    - apiVersion: rhdh.redhat.com/v1alpha4
      blockOwnerDeletion: true
      controller: true
      kind: Backstage
      name: my-rhdh
      uid: 66af0070-357e-4be2-a571-6706ec838dcb
    resourceVersion: "1414"
    uid: b6f09dd2-18a9-4253-a1b1-e22c293cfe2d
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBdzCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE3NjEyMTI0ODgwHhcNMjUxMDIzMDk0MTI4WhcNMzUxMDIxMDk0MTI4
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE3NjEyMTI0ODgwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAS/C3Lp2Ti3uT1D8toUxjfWqYnlL+XlM3XVwh6hKBsu
      rz/zOulFOQru61L0K9B50S66A7COZTq+0vUhjv9qhFq1o0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUGX8P3XVae09GYfnLAxXL
      YQF4qxkwCgYIKoZIzj0EAwIDSAAwRQIhAP6iRjQNjPQHDri1Zhxb6ct+P/3C01pR
      Ty0QdNlJe6/4AiBt6u/nooOaKY9tZKn2zp62BQcbUOaO/fScIKkpiz1tEQ==
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2025-10-23T09:41:43Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/description: {}
      manager: k3s
      operation: Update
      time: "2025-10-23T09:41:43Z"
    name: kube-root-ca.crt
    namespace: my-ns
    resourceVersion: "575"
    uid: 689bcf14-79ff-428f-b3a9-2b26119c2e56
kind: ConfigMapList
metadata:
  resourceVersion: "4661"
