---
# Source: backstage/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-backstage-1-no-local-db-auth
  namespace: "my-ns-3"
  labels:
    app.kubernetes.io/name: developer-hub
    helm.sh/chart: backstage-4.5.8
    app.kubernetes.io/instance: my-backstage-1-no-local-db
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: backstage
  annotations:
type: Opaque
data:
  backend-secret: [REDACTED]
---
# Source: backstage/charts/upstream/templates/app-config-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-backstage-1-no-local-db-developer-hub-app-config
  namespace: "my-ns-3"
data:
  app-config.yaml: [REDACTED]
    app:
      baseUrl: https://my-backstage-1-no-local-db-developer-hub-my-ns-3.apps.rosa.uavnn-6zmwg-wn7.om9c.p3.openshiftapps.com
    auth:
      providers: {}
    backend:
      auth:
        externalAccess:
        - options:
            secret: ${BACKEND_SECRET}
            subject: legacy-default-config
          type: legacy
      baseUrl: https://my-backstage-1-no-local-db-developer-hub-my-ns-3.apps.rosa.uavnn-6zmwg-wn7.om9c.p3.openshiftapps.com
      cors:
        origin: https://my-backstage-1-no-local-db-developer-hub-my-ns-3.apps.rosa.uavnn-6zmwg-wn7.om9c.p3.openshiftapps.com
      database:
        connection:
          password: ${POSTGRESQL_ADMIN_PASSWORD}
          user: postgres
---
# Source: backstage/templates/dynamic-plugins-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-backstage-1-no-local-db-dynamic-plugins
data:
  dynamic-plugins.yaml: [REDACTED]
    includes:
    - dynamic-plugins.default.yaml
    plugins: []
---
# Source: backstage/charts/upstream/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-backstage-1-no-local-db-developer-hub
  namespace: "my-ns-3" 
  labels:
    app.kubernetes.io/name: developer-hub
    helm.sh/chart: upstream-2.6.1
    app.kubernetes.io/instance: my-backstage-1-no-local-db
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: backstage
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: http-backend
      port: 7007
      targetPort: backend
      protocol: TCP
      nodePort: null
    - name: http-metrics
      port: 9464
      targetPort: 9464  
  selector:
    app.kubernetes.io/name: developer-hub
    app.kubernetes.io/instance: my-backstage-1-no-local-db
    app.kubernetes.io/component: backstage
---
# Source: backstage/charts/upstream/templates/backstage-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-backstage-1-no-local-db-developer-hub
  namespace: "my-ns-3"
  labels: 
    app.kubernetes.io/name: developer-hub
    helm.sh/chart: upstream-2.6.1
    app.kubernetes.io/instance: my-backstage-1-no-local-db
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: backstage
  annotations:
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: developer-hub
      app.kubernetes.io/instance: my-backstage-1-no-local-db
      app.kubernetes.io/component: backstage
  template:
    metadata:
      labels:
        app.kubernetes.io/name: developer-hub
        helm.sh/chart: upstream-2.6.1
        app.kubernetes.io/instance: my-backstage-1-no-local-db
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: backstage
      annotations:
        checksum/app-config: 6b543a5d75264fcb56759ebf60ab56cd9f079cf1e4d9d8c7fa74cb83e0f4212e
        checksum/dynamic-plugins: 'f1f9a92f14a31362d7eb30e67ac1458faf1c685765610f93a8967194d8bc1a5f'
    spec:
      serviceAccountName: default
      volumes:
        - ephemeral:
            volumeClaimTemplate:
              spec:
                accessModes:
                - ReadWriteOnce
                resources:
                  requests:
                    storage: 5Gi
          name: dynamic-plugins-root
        - configMap:
            defaultMode: 420
            name: 'my-backstage-1-no-local-db-dynamic-plugins'
            optional: true
          name: dynamic-plugins
        - name: dynamic-plugins-npmrc
          secret:
            defaultMode: 420
            optional: true
            secretName: 'my-backstage-1-no-local-db-dynamic-plugins-npmrc'
        - name: dynamic-plugins-registry-auth
          secret:
            defaultMode: 416
            optional: true
            secretName: 'my-backstage-1-no-local-db-dynamic-plugins-registry-auth'
        - emptyDir: {}
          name: npmcacache
        - emptyDir: {}
          name: temp
        - name: backstage-app-config
          configMap:
            name: my-backstage-1-no-local-db-developer-hub-app-config
      
      initContainers:
        - command:
          - ./install-dynamic-plugins.sh
          - /dynamic-plugins-root
          env:
          - name: NPM_CONFIG_USERCONFIG
            value: /opt/app-root/src/.npmrc.dynamic-plugins
          - name: MAX_ENTRY_SIZE
            value: "30000000"
          image: 'quay.io/rhdh/rhdh-hub-rhel9:latest'
          imagePullPolicy: Always
          name: install-dynamic-plugins
          resources:
            limits:
              cpu: 1000m
              ephemeral-storage: 5Gi
              memory: 2.5Gi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
          - mountPath: /dynamic-plugins-root
            name: dynamic-plugins-root
          - mountPath: /opt/app-root/src/dynamic-plugins.yaml
            name: dynamic-plugins
            readOnly: true
            subPath: dynamic-plugins.yaml
          - mountPath: /opt/app-root/src/.npmrc.dynamic-plugins
            name: dynamic-plugins-npmrc
            readOnly: true
            subPath: .npmrc
          - mountPath: /opt/app-root/src/.config/containers
            name: dynamic-plugins-registry-auth
            readOnly: true
          - mountPath: /opt/app-root/src/.npm/_cacache
            name: npmcacache
          - mountPath: /tmp
            name: temp
          workingDir: /opt/app-root/src
      containers:
        - name: backstage-backend
          image: quay.io/rhdh/rhdh-hub-rhel9:latest
          imagePullPolicy: "Always"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          args:
            - "--config"
            - "dynamic-plugins-root/app-config.dynamic-plugins.yaml"
            - "--config"
            - "/opt/app-root/src/app-config-from-configmap.yaml"
          resources:
            limits:
              cpu: 1000m
              ephemeral-storage: 5Gi
              memory: 2.5Gi
            requests:
              cpu: 250m
              memory: 1Gi
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /.backstage/health/v1/readiness
              port: backend
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 2
            timeoutSeconds: 4
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /.backstage/health/v1/liveness
              port: backend
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 4
          startupProbe:
            failureThreshold: 3
            httpGet:
              path: /.backstage/health/v1/liveness
              port: backend
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 4
          env:
            - name: APP_CONFIG_backend_listen_port
              value: "7007"
            - name: BACKEND_SECRET
              valueFrom:
                secretKeyRef:
                  key: backend-secret
                  name: 'my-backstage-1-no-local-db-auth'
            - name: POSTGRESQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgres-password
                  name: 'my-backstage-1-no-local-db-postgresql'
          ports:
            - name: backend
              containerPort: 7007
              protocol: TCP
          volumeMounts:
            - name: backstage-app-config
              mountPath: "/opt/app-root/src/app-config-from-configmap.yaml"
              subPath: app-config.yaml
            - mountPath: /opt/app-root/src/dynamic-plugins-root
              name: dynamic-plugins-root
            - mountPath: /tmp
              name: temp
---
# Source: backstage/templates/tests/test-secret.yaml
# RHDHBUGS-1893: test-only option to inject a user-provided dynamic plugins npmrc secret.
# Doing it this way because the secret name is dynamic and depends on the release name.
---
# Source: backstage/templates/route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: my-backstage-1-no-local-db-developer-hub
  namespace: "my-ns-3"
  labels:
    app.kubernetes.io/name: developer-hub
    helm.sh/chart: backstage-4.5.8
    app.kubernetes.io/instance: my-backstage-1-no-local-db
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: backstage
spec:
  host: my-backstage-1-no-local-db-developer-hub-my-ns-3.apps.rosa.uavnn-6zmwg-wn7.om9c.p3.openshiftapps.com
  path: /
  port:
    targetPort: http-backend
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: my-backstage-1-no-local-db-developer-hub
    weight: 100
  wildcardPolicy: None

