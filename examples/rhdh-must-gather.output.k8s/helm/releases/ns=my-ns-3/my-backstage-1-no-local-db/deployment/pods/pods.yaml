apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/app-config: 17ff9d7d3ac62ad797cdf103fb3f3be8827f06b3e100a1b934551c5bf52b0093
      checksum/dynamic-plugins: f1f9a92f14a31362d7eb30e67ac1458faf1c685765610f93a8967194d8bc1a5f
    creationTimestamp: "2025-09-11T21:23:13Z"
    generateName: my-backstage-1-no-local-db-developer-hub-65cf86c476-
    labels:
      app.kubernetes.io/component: backstage
      app.kubernetes.io/instance: my-backstage-1-no-local-db
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: developer-hub
      helm.sh/chart: upstream-2.6.1
      pod-template-hash: 65cf86c476
    name: my-backstage-1-no-local-db-developer-hub-65cf86c476-s622n
    namespace: my-ns-3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: my-backstage-1-no-local-db-developer-hub-65cf86c476
      uid: e755d258-5e07-4860-8dc1-0f71b00869ef
    resourceVersion: "29137"
    uid: 1c9eecc8-6583-427f-870f-9a4cd9c57b62
  spec:
    containers:
    - args:
      - --config
      - dynamic-plugins-root/app-config.dynamic-plugins.yaml
      - --config
      - /opt/app-root/src/app-config-from-configmap.yaml
      env:
      - name: APP_CONFIG_backend_listen_port
        value: "7007"
      - name: BACKEND_SECRET
        valueFrom:
          secretKeyRef:
            key: backend-secret
            name: my-backstage-1-no-local-db-auth
      - name: POSTGRESQL_ADMIN_PASSWORD
        valueFrom:
          secretKeyRef:
            key: postgres-password
            name: my-backstage-1-no-local-db-postgresql
      image: quay.io/rhdh/rhdh-hub-rhel9:latest
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /.backstage/health/v1/liveness
          port: backend
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 4
      name: backstage-backend
      ports:
      - containerPort: 7007
        name: backend
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /.backstage/health/v1/readiness
          port: backend
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 2
        timeoutSeconds: 4
      resources:
        limits:
          cpu: "1"
          ephemeral-storage: 5Gi
          memory: 2560Mi
        requests:
          cpu: 250m
          ephemeral-storage: 5Gi
          memory: 1Gi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      startupProbe:
        failureThreshold: 3
        httpGet:
          path: /.backstage/health/v1/liveness
          port: backend
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 4
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app-root/src/app-config-from-configmap.yaml
        name: backstage-app-config
        subPath: app-config.yaml
      - mountPath: /opt/app-root/src/dynamic-plugins-root
        name: dynamic-plugins-root
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x9gsh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - ./install-dynamic-plugins.sh
      - /dynamic-plugins-root
      env:
      - name: NPM_CONFIG_USERCONFIG
        value: /opt/app-root/src/.npmrc.dynamic-plugins
      - name: MAX_ENTRY_SIZE
        value: "30000000"
      image: quay.io/rhdh/rhdh-hub-rhel9:latest
      imagePullPolicy: Always
      name: install-dynamic-plugins
      resources:
        limits:
          cpu: "1"
          ephemeral-storage: 5Gi
          memory: 2560Mi
        requests:
          cpu: 250m
          ephemeral-storage: 5Gi
          memory: 256Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /dynamic-plugins-root
        name: dynamic-plugins-root
      - mountPath: /opt/app-root/src/dynamic-plugins.yaml
        name: dynamic-plugins
        readOnly: true
        subPath: dynamic-plugins.yaml
      - mountPath: /opt/app-root/src/.npmrc.dynamic-plugins
        name: dynamic-plugins-npmrc
        readOnly: true
        subPath: .npmrc
      - mountPath: /opt/app-root/src/.config/containers
        name: dynamic-plugins-registry-auth
        readOnly: true
      - mountPath: /opt/app-root/src/.npm/_cacache
        name: npmcacache
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x9gsh
        readOnly: true
      workingDir: /opt/app-root/src
    nodeName: k3d-local-1-agent-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - ephemeral:
        volumeClaimTemplate:
          metadata:
            creationTimestamp: null
          spec:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 5Gi
            volumeMode: Filesystem
      name: dynamic-plugins-root
    - configMap:
        defaultMode: 420
        name: my-backstage-1-no-local-db-dynamic-plugins
        optional: true
      name: dynamic-plugins
    - name: dynamic-plugins-npmrc
      secret:
        defaultMode: 420
        optional: true
        secretName: my-backstage-1-no-local-db-dynamic-plugins-npmrc
    - name: dynamic-plugins-registry-auth
      secret:
        defaultMode: 416
        optional: true
        secretName: my-backstage-1-no-local-db-dynamic-plugins-registry-auth
    - emptyDir: {}
      name: npmcacache
    - emptyDir: {}
      name: temp
    - configMap:
        defaultMode: 420
        name: my-backstage-1-no-local-db-developer-hub-app-config
      name: backstage-app-config
    - name: kube-api-access-x9gsh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-11T21:25:42Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-11T21:26:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-11T21:23:21Z"
      message: 'containers with unready status: [backstage-backend]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-11T21:23:21Z"
      message: 'containers with unready status: [backstage-backend]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-11T21:23:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: quay.io/rhdh/rhdh-hub-rhel9:latest
      imageID: ""
      lastState: {}
      name: backstage-backend
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          message: secret "my-backstage-1-no-local-db-postgresql" not found
          reason: CreateContainerConfigError
      volumeMounts:
      - mountPath: /opt/app-root/src/app-config-from-configmap.yaml
        name: backstage-app-config
      - mountPath: /opt/app-root/src/dynamic-plugins-root
        name: dynamic-plugins-root
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x9gsh
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.4
    hostIPs:
    - ip: 172.18.0.4
    initContainerStatuses:
    - containerID: containerd://f755a72463c4124a3c0d9a34d63b08ee8943d7c17355c83c9e14927807579a0a
      image: quay.io/rhdh/rhdh-hub-rhel9:latest
      imageID: quay.io/rhdh/rhdh-hub-rhel9@sha256:1833cd22478ed53a99e08596b97c892559120b602a7cadcfe4be2a3ecf74a91a
      lastState: {}
      name: install-dynamic-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://f755a72463c4124a3c0d9a34d63b08ee8943d7c17355c83c9e14927807579a0a
          exitCode: 0
          finishedAt: "2025-09-11T21:26:56Z"
          reason: Completed
          startedAt: "2025-09-11T21:25:41Z"
      volumeMounts:
      - mountPath: /dynamic-plugins-root
        name: dynamic-plugins-root
      - mountPath: /opt/app-root/src/dynamic-plugins.yaml
        name: dynamic-plugins
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /opt/app-root/src/.npmrc.dynamic-plugins
        name: dynamic-plugins-npmrc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /opt/app-root/src/.config/containers
        name: dynamic-plugins-registry-auth
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /opt/app-root/src/.npm/_cacache
        name: npmcacache
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x9gsh
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Pending
    podIP: 10.42.0.10
    podIPs:
    - ip: 10.42.0.10
    qosClass: Burstable
    startTime: "2025-09-11T21:23:21Z"
kind: List
metadata:
  resourceVersion: ""
