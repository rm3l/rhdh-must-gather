---
apiVersion: apps/v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-10-23T09:44:56Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: my-rhdh
      app.kubernetes.io/name: backstage
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
          f:ownerReferences:
            k:{"uid":"66af0070-357e-4be2-a571-6706ec838dcb"}: {}
        f:spec:
          f:selector: {}
          f:strategy: {}
          f:template:
            f:metadata:
              f:annotations:
                f:rhdh.redhat.com/ext-config-hash: {}
              f:creationTimestamp: {}
              f:labels:
                f:rhdh.redhat.com/app: {}
            f:spec:
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"backstage-backend"}:
                  .: {}
                  f:args: {}
                  f:env:
                    k:{"name":"APP_CONFIG_backend_listen_port"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    f:failureThreshold: {}
                    f:httpGet:
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    k:{"containerPort":7007,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                  f:readinessProbe:
                    f:failureThreshold: {}
                    f:httpGet:
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    f:limits:
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:seccompProfile:
                      f:type: {}
                  f:startupProbe:
                    f:failureThreshold: {}
                    f:httpGet:
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:volumeMounts:
                    k:{"mountPath":"/opt/app-root/src/default.app-config.yaml"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                      f:subPath: {}
                    k:{"mountPath":"/opt/app-root/src/dynamic-plugins-root"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                  f:workingDir: {}
              f:initContainers:
                k:{"name":"install-dynamic-plugins"}:
                  .: {}
                  f:command: {}
                  f:env:
                    k:{"name":"MAX_ENTRY_SIZE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NPM_CONFIG_USERCONFIG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    f:limits:
                      f:cpu: {}
                      f:ephemeral-storage: {}
                      f:memory: {}
                    f:requests:
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:seccompProfile:
                      f:type: {}
                  f:volumeMounts:
                    k:{"mountPath":"/dynamic-plugins-root"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/app-root/src/.config/containers"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/opt/app-root/src/.npm/_cacache"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/app-root/src/.npmrc.dynamic-plugins"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/app-root/src/dynamic-plugins.yaml"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                      f:subPath: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                  f:workingDir: {}
              f:securityContext:
                f:fsGroup: {}
              f:volumes:
                k:{"name":"backstage-appconfig-my-rhdh"}:
                  .: {}
                  f:configMap:
                    f:defaultMode: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
                k:{"name":"backstage-dynamic-plugins-my-rhdh"}:
                  .: {}
                  f:configMap:
                    f:defaultMode: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
                k:{"name":"backstage-files-my-rhdh"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"dynamic-plugins-registry-auth"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"dynamic-plugins-root"}:
                  .: {}
                  f:ephemeral:
                    f:volumeClaimTemplate:
                      f:metadata:
                        f:creationTimestamp: {}
                      f:spec:
                        f:accessModes: {}
                        f:resources:
                          f:requests:
                            f:storage: {}
                  f:name: {}
                k:{"name":"npmcacache"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"temp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: backstage-controller
      operation: Apply
      time: "2025-10-23T09:44:56Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: k3s
      operation: Update
      subresource: status
      time: "2025-10-23T09:49:14Z"
    name: backstage-my-rhdh
    namespace: my-ns
    ownerReferences:
    - apiVersion: rhdh.redhat.com/v1alpha4
      blockOwnerDeletion: true
      controller: true
      kind: Backstage
      name: my-rhdh
      uid: 66af0070-357e-4be2-a571-6706ec838dcb
    resourceVersion: "2095"
    uid: b3f6a638-cf34-44db-afd3-8fcc2a34c4f8
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        rhdh.redhat.com/app: backstage-my-rhdh
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          rhdh.redhat.com/ext-config-hash: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        creationTimestamp: null
        labels:
          rhdh.redhat.com/app: backstage-my-rhdh
      spec:
        automountServiceAccountToken: false
        containers:
        - args:
          - --config
          - dynamic-plugins-root/app-config.dynamic-plugins.yaml
          - --config
          - /opt/app-root/src/default.app-config.yaml
          env:
          - name: APP_CONFIG_backend_listen_port
            value: "7007"
          envFrom:
          - secretRef:
              name: backstage-psql-secret-my-rhdh
          image: quay.io/rhdh/rhdh-hub-rhel9:next
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /.backstage/health/v1/liveness
              port: backend
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 4
          name: backstage-backend
          ports:
          - containerPort: 7007
            name: backend
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /.backstage/health/v1/readiness
              port: backend
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 2
            timeoutSeconds: 4
          resources:
            limits:
              cpu: "1"
              ephemeral-storage: 5Gi
              memory: 2560Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 3
            httpGet:
              path: /.backstage/health/v1/liveness
              port: backend
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 4
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/app-root/src/dynamic-plugins-root
            name: dynamic-plugins-root
          - mountPath: /tmp
            name: temp
          - mountPath: /opt/app-root/src/default.app-config.yaml
            name: backstage-appconfig-my-rhdh
            readOnly: true
            subPath: default.app-config.yaml
          workingDir: /opt/app-root/src
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - ./install-dynamic-plugins.sh
          - /dynamic-plugins-root
          env:
          - name: NPM_CONFIG_USERCONFIG
            value: /opt/app-root/src/.npmrc.dynamic-plugins/.npmrc
          - name: MAX_ENTRY_SIZE
            value: "30000000"
          image: quay.io/rhdh/rhdh-hub-rhel9:next
          imagePullPolicy: IfNotPresent
          name: install-dynamic-plugins
          resources:
            limits:
              cpu: "1"
              ephemeral-storage: 5Gi
              memory: 2560Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /dynamic-plugins-root
            name: dynamic-plugins-root
          - mountPath: /opt/app-root/src/.config/containers
            name: dynamic-plugins-registry-auth
            readOnly: true
          - mountPath: /opt/app-root/src/.npm/_cacache
            name: npmcacache
          - mountPath: /tmp
            name: temp
          - mountPath: /opt/app-root/src/dynamic-plugins.yaml
            name: backstage-dynamic-plugins-my-rhdh
            readOnly: true
            subPath: dynamic-plugins.yaml
          - mountPath: /opt/app-root/src/.npmrc.dynamic-plugins
            name: backstage-files-my-rhdh
          workingDir: /opt/app-root/src
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        terminationGracePeriodSeconds: 30
        volumes:
        - ephemeral:
            volumeClaimTemplate:
              metadata:
                creationTimestamp: null
              spec:
                accessModes:
                - ReadWriteOnce
                resources:
                  requests:
                    storage: 2Gi
                volumeMode: Filesystem
          name: dynamic-plugins-root
        - name: dynamic-plugins-registry-auth
          secret:
            defaultMode: 416
            optional: true
            secretName: dynamic-plugins-registry-auth
        - emptyDir: {}
          name: npmcacache
        - emptyDir: {}
          name: temp
        - configMap:
            defaultMode: 420
            name: backstage-appconfig-my-rhdh
            optional: false
          name: backstage-appconfig-my-rhdh
        - configMap:
            defaultMode: 420
            name: backstage-dynamic-plugins-my-rhdh
            optional: false
          name: backstage-dynamic-plugins-my-rhdh
        - name: backstage-files-my-rhdh
          secret:
            defaultMode: 420
            optional: false
            secretName: backstage-files-my-rhdh
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-10-23T09:49:14Z"
      lastUpdateTime: "2025-10-23T09:49:14Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-10-23T09:44:56Z"
      lastUpdateTime: "2025-10-23T09:49:14Z"
      message: ReplicaSet "backstage-my-rhdh-6457df4994" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
kind: DeploymentList
metadata:
  resourceVersion: "4661"
