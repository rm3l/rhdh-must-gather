---
apiVersion: v1
items:
- apiVersion: v1
  data:
    .npmrc: [REDACTED]
  kind: Secret
  metadata:
    annotations:
      rhdh.redhat.com/containers: install-dynamic-plugins
      rhdh.redhat.com/mount-path: /opt/app-root/src/.npmrc.dynamic-plugins
    creationTimestamp: "2025-10-23T11:12:30Z"
    labels:
      app.kubernetes.io/instance: my-developer-hub-op
      app.kubernetes.io/name: backstage
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:rhdh.redhat.com/containers: {}
            f:rhdh.redhat.com/mount-path: {}
          f:labels:
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
          f:ownerReferences:
            k:{"uid":"61803723-6184-4c65-8836-9c7513554702"}: {}
        f:stringData:
          f:.npmrc: {}
        f:type: {}
      manager: backstage-controller
      operation: Apply
      time: "2025-10-23T11:12:30Z"
    name: backstage-files-my-developer-hub-op
    namespace: my-ns
    ownerReferences:
    - apiVersion: rhdh.redhat.com/v1alpha3
      blockOwnerDeletion: true
      controller: true
      kind: Backstage
      name: my-developer-hub-op
      uid: 61803723-6184-4c65-8836-9c7513554702
    resourceVersion: "40490"
    uid: d2eb43ec-dd51-4f71-bc3e-3fb5a468acf0
  type: Opaque
- apiVersion: v1
  data:
    POSTGRES_HOST: [REDACTED]
    POSTGRES_PASSWORD: [REDACTED]
    POSTGRES_PORT: [REDACTED]
    POSTGRES_USER: [REDACTED]
    POSTGRESQL_ADMIN_PASSWORD: [REDACTED]
  kind: Secret
  metadata:
    creationTimestamp: "2025-10-23T11:12:30Z"
    labels:
      app.kubernetes.io/instance: my-developer-hub-op
      app.kubernetes.io/name: backstage
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:POSTGRES_HOST: {}
          f:POSTGRES_PASSWORD: {}
          f:POSTGRES_PORT: {}
          f:POSTGRES_USER: {}
          f:POSTGRESQL_ADMIN_PASSWORD: {}
        f:metadata:
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"61803723-6184-4c65-8836-9c7513554702"}: {}
        f:type: {}
      manager: backstage-controller
      operation: Update
      time: "2025-10-23T11:12:30Z"
    name: backstage-psql-secret-my-developer-hub-op
    namespace: my-ns
    ownerReferences:
    - apiVersion: rhdh.redhat.com/v1alpha3
      blockOwnerDeletion: true
      controller: true
      kind: Backstage
      name: my-developer-hub-op
      uid: 61803723-6184-4c65-8836-9c7513554702
    resourceVersion: "40484"
    uid: d3ce8650-20ff-4ce1-8949-e6b25bea4388
  type: Opaque
- apiVersion: v1
  data:
    .dockercfg: [REDACTED]
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: builder
    creationTimestamp: "2025-10-23T07:52:50Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"5fa22f32-99fe-44e1-9274-39baedb4727e"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2025-10-23T07:52:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2025-10-23T10:52:50Z"
    name: builder-dockercfg-g49rx
    namespace: my-ns
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: builder
      uid: 5fa22f32-99fe-44e1-9274-39baedb4727e
    resourceVersion: "36988"
    uid: 3cf8ec37-4aae-45e2-93a9-8db21a284721
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    .dockercfg: [REDACTED]
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: default
    creationTimestamp: "2025-10-23T07:52:50Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"12834e58-065e-49b9-bf43-619b8fc5d51f"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2025-10-23T07:52:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2025-10-23T10:52:50Z"
    name: default-dockercfg-k4hmt
    namespace: my-ns
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: default
      uid: 12834e58-065e-49b9-bf43-619b8fc5d51f
    resourceVersion: "36989"
    uid: 5d9a90f4-b859-4860-b049-cf3a464cb79d
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    .dockercfg: [REDACTED]
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: deployer
    creationTimestamp: "2025-10-23T07:52:50Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"f5802411-d24e-41d1-8c32-2279e5a9fdc8"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2025-10-23T07:52:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2025-10-23T10:52:50Z"
    name: deployer-dockercfg-894vs
    namespace: my-ns
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: deployer
      uid: f5802411-d24e-41d1-8c32-2279e5a9fdc8
    resourceVersion: "36990"
    uid: 222b0670-e6d8-4c8c-9e82-7bf350675326
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    backend-secret: [REDACTED]
  kind: Secret
  metadata:
    annotations:
      meta.helm.sh/release-name: redhat-developer-hub-helm
      meta.helm.sh/release-namespace: my-ns
    creationTimestamp: "2025-10-23T11:11:18Z"
    labels:
      app.kubernetes.io/component: backstage
      app.kubernetes.io/instance: redhat-developer-hub-helm
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: developer-hub
      app.kubernetes.io/version: 1.7.1
      helm.sh/chart: redhat-developer-hub-1.7.1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:backend-secret: {}
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
        f:type: {}
      manager: bridge
      operation: Update
      time: "2025-10-23T11:11:18Z"
    name: redhat-developer-hub-helm-auth
    namespace: my-ns
    resourceVersion: "40206"
    uid: 48e26e22-9900-43b1-a258-f85c9bbee960
  type: Opaque
- apiVersion: v1
  data:
    password: [REDACTED]
    postgres-password: [REDACTED]
  kind: Secret
  metadata:
    annotations:
      meta.helm.sh/release-name: redhat-developer-hub-helm
      meta.helm.sh/release-namespace: my-ns
    creationTimestamp: "2025-10-23T11:11:18Z"
    labels:
      app.kubernetes.io/instance: redhat-developer-hub-helm
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/version: 15.4.0
      helm.sh/chart: postgresql-12.10.0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:password: {}
          f:postgres-password: {}
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
        f:type: {}
      manager: bridge
      operation: Update
      time: "2025-10-23T11:11:18Z"
    name: redhat-developer-hub-helm-postgresql
    namespace: my-ns
    resourceVersion: "40208"
    uid: a3fdff90-08cc-45cf-bbcf-2dd727f66b12
  type: Opaque
- apiVersion: v1
  data:
    host: [REDACTED]
    password: [REDACTED]
    port: [REDACTED]
    provider: [REDACTED]
    type: [REDACTED]
    uri: [REDACTED]
    username: [REDACTED]
  kind: Secret
  metadata:
    annotations:
      meta.helm.sh/release-name: redhat-developer-hub-helm
      meta.helm.sh/release-namespace: my-ns
    creationTimestamp: "2025-10-23T11:11:18Z"
    labels:
      app.kubernetes.io/instance: redhat-developer-hub-helm
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/version: 15.4.0
      helm.sh/chart: postgresql-12.10.0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:host: {}
          f:password: {}
          f:port: {}
          f:provider: {}
          f:type: {}
          f:uri: {}
          f:username: {}
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
        f:type: {}
      manager: bridge
      operation: Update
      time: "2025-10-23T11:11:18Z"
    name: redhat-developer-hub-helm-postgresql-svcbind-custom-user
    namespace: my-ns
    resourceVersion: "40209"
    uid: ae42ffff-4e0d-4f06-9adf-5dd1d55a821a
  type: servicebinding.io/postgresql
- apiVersion: v1
  data:
    database: [REDACTED]
    host: [REDACTED]
    password: [REDACTED]
    port: [REDACTED]
    provider: [REDACTED]
    type: [REDACTED]
    uri: [REDACTED]
    username: [REDACTED]
  kind: Secret
  metadata:
    annotations:
      meta.helm.sh/release-name: redhat-developer-hub-helm
      meta.helm.sh/release-namespace: my-ns
    creationTimestamp: "2025-10-23T11:11:18Z"
    labels:
      app.kubernetes.io/instance: redhat-developer-hub-helm
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/version: 15.4.0
      helm.sh/chart: postgresql-12.10.0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:database: {}
          f:host: {}
          f:password: {}
          f:port: {}
          f:provider: {}
          f:type: {}
          f:uri: {}
          f:username: {}
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
        f:type: {}
      manager: bridge
      operation: Update
      time: "2025-10-23T11:11:18Z"
    name: redhat-developer-hub-helm-postgresql-svcbind-postgres
    namespace: my-ns
    resourceVersion: "40207"
    uid: c88955f9-4f7f-4e0b-b2e9-0c4840a0cf17
  type: servicebinding.io/postgresql
- apiVersion: v1
  data:
    release: [REDACTED]
  kind: Secret
  metadata:
    creationTimestamp: "2025-10-23T11:11:18Z"
    labels:
      modifiedAt: "1761217878"
      name: redhat-developer-hub-helm
      owner: helm
      status: deployed
      version: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:release: {}
        f:metadata:
          f:labels:
            .: {}
            f:modifiedAt: {}
            f:name: {}
            f:owner: {}
            f:status: {}
            f:version: {}
        f:type: {}
      manager: bridge
      operation: Update
      time: "2025-10-23T11:11:18Z"
    name: sh.helm.release.v1.redhat-developer-hub-helm.v1
    namespace: my-ns
    resourceVersion: "40253"
    uid: 643e41da-ea71-4a64-b41e-6d08817811d5
  type: helm.sh/release.v1
kind: SecretList
metadata:
  resourceVersion: "42043"
