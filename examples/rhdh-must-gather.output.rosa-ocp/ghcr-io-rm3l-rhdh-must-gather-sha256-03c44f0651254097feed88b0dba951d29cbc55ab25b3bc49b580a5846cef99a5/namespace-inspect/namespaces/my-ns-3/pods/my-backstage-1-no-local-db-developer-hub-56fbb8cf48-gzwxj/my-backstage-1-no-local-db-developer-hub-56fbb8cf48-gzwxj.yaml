---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    checksum/app-config: 17ff9d7d3ac62ad797cdf103fb3f3be8827f06b3e100a1b934551c5bf52b0093
    checksum/dynamic-plugins: f1f9a92f14a31362d7eb30e67ac1458faf1c685765610f93a8967194d8bc1a5f
    k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.60/23"],"mac_address":"0a:58:0a:80:00:3c","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"169.254.0.5/32","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.60/23","gateway_ip":"10.128.0.1","role":"primary"}}'
    k8s.v1.cni.cncf.io/network-status: |-
      [{
          "name": "ovn-kubernetes",
          "interface": "eth0",
          "ips": [
              "10.128.0.60"
          ],
          "mac": "0a:58:0a:80:00:3c",
          "default": true,
          "dns": {}
      }]
    openshift.io/scc: restricted-v2
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
  creationTimestamp: "2025-10-23T11:08:15Z"
  generateName: my-backstage-1-no-local-db-developer-hub-56fbb8cf48-
  labels:
    app.kubernetes.io/component: backstage
    app.kubernetes.io/instance: my-backstage-1-no-local-db
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: developer-hub
    helm.sh/chart: upstream-2.6.1
    pod-template-hash: 56fbb8cf48
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:checksum/app-config: {}
          f:checksum/dynamic-plugins: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/component: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/managed-by: {}
          f:app.kubernetes.io/name: {}
          f:helm.sh/chart: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"e1e5c6ed-f239-4375-a976-e8cfad037694"}: {}
      f:spec:
        f:containers:
          k:{"name":"backstage-backend"}:
            .: {}
            f:args: {}
            f:env:
              .: {}
              k:{"name":"APP_CONFIG_backend_listen_port"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"BACKEND_SECRET"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:secretKeyRef: {}
              k:{"name":"POSTGRESQL_ADMIN_PASSWORD"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:secretKeyRef: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:livenessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":7007,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:readinessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources:
              .: {}
              f:limits:
                .: {}
                f:cpu: {}
                f:ephemeral-storage: {}
                f:memory: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:ephemeral-storage: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:capabilities:
                .: {}
                f:drop: {}
              f:readOnlyRootFilesystem: {}
              f:runAsNonRoot: {}
              f:seccompProfile:
                .: {}
                f:type: {}
            f:startupProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/opt/app-root/src/app-config-from-configmap.yaml"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
              k:{"mountPath":"/opt/app-root/src/dynamic-plugins-root"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/tmp"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:initContainers:
          .: {}
          k:{"name":"install-dynamic-plugins"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"MAX_ENTRY_SIZE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"NPM_CONFIG_USERCONFIG"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources:
              .: {}
              f:limits:
                .: {}
                f:cpu: {}
                f:ephemeral-storage: {}
                f:memory: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:ephemeral-storage: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:capabilities:
                .: {}
                f:drop: {}
              f:readOnlyRootFilesystem: {}
              f:runAsNonRoot: {}
              f:seccompProfile:
                .: {}
                f:type: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/dynamic-plugins-root"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/opt/app-root/src/.config/containers"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/opt/app-root/src/.npm/_cacache"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/opt/app-root/src/.npmrc.dynamic-plugins"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
                f:subPath: {}
              k:{"mountPath":"/opt/app-root/src/dynamic-plugins.yaml"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
                f:subPath: {}
              k:{"mountPath":"/tmp"}:
                .: {}
                f:mountPath: {}
                f:name: {}
            f:workingDir: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:volumes:
          .: {}
          k:{"name":"backstage-app-config"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"dynamic-plugins"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
              f:optional: {}
            f:name: {}
          k:{"name":"dynamic-plugins-npmrc"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:optional: {}
              f:secretName: {}
          k:{"name":"dynamic-plugins-registry-auth"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:optional: {}
              f:secretName: {}
          k:{"name":"dynamic-plugins-root"}:
            .: {}
            f:ephemeral:
              .: {}
              f:volumeClaimTemplate:
                .: {}
                f:metadata:
                  .: {}
                  f:creationTimestamp: {}
                f:spec:
                  .: {}
                  f:accessModes: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:storage: {}
                  f:volumeMode: {}
            f:name: {}
          k:{"name":"npmcacache"}:
            .: {}
            f:emptyDir: {}
            f:name: {}
          k:{"name":"temp"}:
            .: {}
            f:emptyDir: {}
            f:name: {}
    manager: kube-controller-manager
    operation: Update
    time: "2025-10-23T11:08:15Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          .: {}
          k:{"type":"PodScheduled"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
    manager: kube-scheduler
    operation: Update
    subresource: status
    time: "2025-10-23T11:08:15Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:k8s.ovn.org/pod-networks: {}
    manager: ip-10-0-1-102
    operation: Update
    subresource: status
    time: "2025-10-23T11:08:19Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:k8s.v1.cni.cncf.io/network-status: {}
    manager: multus-daemon
    operation: Update
    subresource: status
    time: "2025-10-23T11:08:23Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"PodReadyToStartContainers"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:hostIPs: {}
        f:initContainerStatuses: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.128.0.60"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2025-10-23T11:11:30Z"
  name: my-backstage-1-no-local-db-developer-hub-56fbb8cf48-gzwxj
  namespace: my-ns-3
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: my-backstage-1-no-local-db-developer-hub-56fbb8cf48
    uid: e1e5c6ed-f239-4375-a976-e8cfad037694
  resourceVersion: "40340"
  uid: fbe184ee-3313-4dcb-8c3c-c74b446c8b4c
spec:
  containers:
  - args:
    - --config
    - dynamic-plugins-root/app-config.dynamic-plugins.yaml
    - --config
    - /opt/app-root/src/app-config-from-configmap.yaml
    env:
    - name: APP_CONFIG_backend_listen_port
      value: "7007"
    - name: BACKEND_SECRET
      valueFrom:
        secretKeyRef:
          key: backend-secret
          name: my-backstage-1-no-local-db-auth
    - name: POSTGRESQL_ADMIN_PASSWORD
      valueFrom:
        secretKeyRef:
          key: postgres-password
          name: my-backstage-1-no-local-db-postgresql
    image: quay.io/rhdh/rhdh-hub-rhel9:latest
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /.backstage/health/v1/liveness
        port: backend
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 4
    name: backstage-backend
    ports:
    - containerPort: 7007
      name: backend
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /.backstage/health/v1/readiness
        port: backend
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 2
      timeoutSeconds: 4
    resources:
      limits:
        cpu: "1"
        ephemeral-storage: 5Gi
        memory: 2560Mi
      requests:
        cpu: 250m
        ephemeral-storage: 5Gi
        memory: 1Gi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000860000
      seccompProfile:
        type: RuntimeDefault
    startupProbe:
      failureThreshold: 3
      httpGet:
        path: /.backstage/health/v1/liveness
        port: backend
        scheme: HTTP
      initialDelaySeconds: 30
      periodSeconds: 20
      successThreshold: 1
      timeoutSeconds: 4
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /opt/app-root/src/app-config-from-configmap.yaml
      name: backstage-app-config
      subPath: app-config.yaml
    - mountPath: /opt/app-root/src/dynamic-plugins-root
      name: dynamic-plugins-root
    - mountPath: /tmp
      name: temp
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-tr26m
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
  - name: default-dockercfg-96wnh
  initContainers:
  - command:
    - ./install-dynamic-plugins.sh
    - /dynamic-plugins-root
    env:
    - name: NPM_CONFIG_USERCONFIG
      value: /opt/app-root/src/.npmrc.dynamic-plugins
    - name: MAX_ENTRY_SIZE
      value: "30000000"
    image: quay.io/rhdh/rhdh-hub-rhel9:latest
    imagePullPolicy: IfNotPresent
    name: install-dynamic-plugins
    resources:
      limits:
        cpu: "1"
        ephemeral-storage: 5Gi
        memory: 2560Mi
      requests:
        cpu: 250m
        ephemeral-storage: 5Gi
        memory: 256Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000860000
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /dynamic-plugins-root
      name: dynamic-plugins-root
    - mountPath: /opt/app-root/src/dynamic-plugins.yaml
      name: dynamic-plugins
      readOnly: true
      subPath: dynamic-plugins.yaml
    - mountPath: /opt/app-root/src/.npmrc.dynamic-plugins
      name: dynamic-plugins-npmrc
      readOnly: true
      subPath: .npmrc
    - mountPath: /opt/app-root/src/.config/containers
      name: dynamic-plugins-registry-auth
      readOnly: true
    - mountPath: /opt/app-root/src/.npm/_cacache
      name: npmcacache
    - mountPath: /tmp
      name: temp
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-tr26m
      readOnly: true
    workingDir: /opt/app-root/src
  nodeName: ip-10-0-1-102.ec2.internal
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000860000
    seLinuxOptions:
      level: s0:c29,c24
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - ephemeral:
      volumeClaimTemplate:
        metadata:
          creationTimestamp: null
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi
          volumeMode: Filesystem
    name: dynamic-plugins-root
  - configMap:
      defaultMode: 420
      name: my-backstage-1-no-local-db-dynamic-plugins
      optional: true
    name: dynamic-plugins
  - name: dynamic-plugins-npmrc
    secret:
      defaultMode: 420
      optional: true
      secretName: my-backstage-1-no-local-db-dynamic-plugins-npmrc
  - name: dynamic-plugins-registry-auth
    secret:
      defaultMode: 416
      optional: true
      secretName: my-backstage-1-no-local-db-dynamic-plugins-registry-auth
  - emptyDir: {}
    name: npmcacache
  - emptyDir: {}
    name: temp
  - configMap:
      defaultMode: 420
      name: my-backstage-1-no-local-db-developer-hub-app-config
    name: backstage-app-config
  - name: kube-api-access-tr26m
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2025-10-23T11:09:52Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2025-10-23T11:11:18Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2025-10-23T11:08:19Z"
    message: 'containers with unready status: [backstage-backend]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2025-10-23T11:08:19Z"
    message: 'containers with unready status: [backstage-backend]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2025-10-23T11:08:19Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - image: quay.io/rhdh/rhdh-hub-rhel9:latest
    imageID: ""
    lastState: {}
    name: backstage-backend
    ready: false
    restartCount: 0
    started: false
    state:
      waiting:
        message: secret "my-backstage-1-no-local-db-postgresql" not found
        reason: CreateContainerConfigError
    volumeMounts:
    - mountPath: /opt/app-root/src/app-config-from-configmap.yaml
      name: backstage-app-config
    - mountPath: /opt/app-root/src/dynamic-plugins-root
      name: dynamic-plugins-root
    - mountPath: /tmp
      name: temp
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-tr26m
      readOnly: true
      recursiveReadOnly: Disabled
  hostIP: 10.0.1.102
  hostIPs:
  - ip: 10.0.1.102
  initContainerStatuses:
  - containerID: cri-o://61201aa9401a67d153dd9dd0f0615d4be7a18818e2f37d75f49665e23632751a
    image: quay.io/rhdh/rhdh-hub-rhel9:latest
    imageID: quay.io/rhdh/rhdh-hub-rhel9@sha256:42281e7004d43443b7147e5a699c42cb3368ba7cd11d83c5219cbc9d87860ad6
    lastState: {}
    name: install-dynamic-plugins
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: cri-o://61201aa9401a67d153dd9dd0f0615d4be7a18818e2f37d75f49665e23632751a
        exitCode: 0
        finishedAt: "2025-10-23T11:11:18Z"
        reason: Completed
        startedAt: "2025-10-23T11:09:51Z"
    volumeMounts:
    - mountPath: /dynamic-plugins-root
      name: dynamic-plugins-root
    - mountPath: /opt/app-root/src/dynamic-plugins.yaml
      name: dynamic-plugins
      readOnly: true
      recursiveReadOnly: Disabled
    - mountPath: /opt/app-root/src/.npmrc.dynamic-plugins
      name: dynamic-plugins-npmrc
      readOnly: true
      recursiveReadOnly: Disabled
    - mountPath: /opt/app-root/src/.config/containers
      name: dynamic-plugins-registry-auth
      readOnly: true
      recursiveReadOnly: Disabled
    - mountPath: /opt/app-root/src/.npm/_cacache
      name: npmcacache
    - mountPath: /tmp
      name: temp
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-tr26m
      readOnly: true
      recursiveReadOnly: Disabled
  phase: Pending
  podIP: 10.128.0.60
  podIPs:
  - ip: 10.128.0.60
  qosClass: Burstable
  startTime: "2025-10-23T11:08:19Z"
