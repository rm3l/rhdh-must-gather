---
apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-10-23T11:12:30Z"
    labels:
      app.kubernetes.io/instance: my-developer-hub-op
      app.kubernetes.io/name: backstage
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
          f:ownerReferences:
            k:{"uid":"61803723-6184-4c65-8836-9c7513554702"}: {}
        f:spec:
          f:ports:
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:targetPort: {}
            k:{"port":9464,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:type: {}
      manager: backstage-controller
      operation: Apply
      time: "2025-10-23T11:12:30Z"
    name: backstage-my-developer-hub-op
    namespace: my-ns
    ownerReferences:
    - apiVersion: rhdh.redhat.com/v1alpha3
      blockOwnerDeletion: true
      controller: true
      kind: Backstage
      name: my-developer-hub-op
      uid: 61803723-6184-4c65-8836-9c7513554702
    resourceVersion: "40494"
    uid: 113abc4d-99fa-4b6f-967b-e588d570e956
  spec:
    clusterIP: 172.30.252.224
    clusterIPs:
    - 172.30.252.224
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      port: 80
      protocol: TCP
      targetPort: backend
    - name: http-metrics
      port: 9464
      protocol: TCP
      targetPort: 9464
    selector:
      rhdh.redhat.com/app: backstage-my-developer-hub-op
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-10-23T11:12:30Z"
    labels:
      app.kubernetes.io/instance: my-developer-hub-op
      app.kubernetes.io/name: backstage
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
          f:ownerReferences:
            k:{"uid":"61803723-6184-4c65-8836-9c7513554702"}: {}
        f:spec:
          f:clusterIP: {}
          f:ports:
            k:{"port":5432,"protocol":"TCP"}:
              .: {}
              f:port: {}
              f:targetPort: {}
          f:selector: {}
      manager: backstage-controller
      operation: Apply
      time: "2025-10-23T11:12:30Z"
    name: backstage-psql-my-developer-hub-op
    namespace: my-ns
    ownerReferences:
    - apiVersion: rhdh.redhat.com/v1alpha3
      blockOwnerDeletion: true
      controller: true
      kind: Backstage
      name: my-developer-hub-op
      uid: 61803723-6184-4c65-8836-9c7513554702
    resourceVersion: "40485"
    uid: e32378e5-a6d6-49e4-be3e-1756b1decd94
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      rhdh.redhat.com/app: backstage-psql-my-developer-hub-op
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: redhat-developer-hub-helm
      meta.helm.sh/release-namespace: my-ns
    creationTimestamp: "2025-10-23T11:11:18Z"
    labels:
      app.kubernetes.io/component: backstage
      app.kubernetes.io/instance: redhat-developer-hub-helm
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: developer-hub
      helm.sh/chart: upstream-2.6.0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:helm.sh/chart: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":7007,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":9464,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: bridge
      operation: Update
      time: "2025-10-23T11:11:18Z"
    name: redhat-developer-hub-helm
    namespace: my-ns
    resourceVersion: "40215"
    uid: b6bba15d-8ef4-4ab8-b737-cbf8ee510340
  spec:
    clusterIP: 172.30.35.17
    clusterIPs:
    - 172.30.35.17
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-backend
      port: 7007
      protocol: TCP
      targetPort: backend
    - name: http-metrics
      port: 9464
      protocol: TCP
      targetPort: 9464
    selector:
      app.kubernetes.io/component: backstage
      app.kubernetes.io/instance: redhat-developer-hub-helm
      app.kubernetes.io/name: developer-hub
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: redhat-developer-hub-helm
      meta.helm.sh/release-namespace: my-ns
    creationTimestamp: "2025-10-23T11:11:18Z"
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: redhat-developer-hub-helm
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/version: 15.4.0
      helm.sh/chart: postgresql-12.10.0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":5432,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: bridge
      operation: Update
      time: "2025-10-23T11:11:18Z"
    name: redhat-developer-hub-helm-postgresql
    namespace: my-ns
    resourceVersion: "40220"
    uid: 62921486-c0cf-4a70-be3a-6000313b28d4
  spec:
    clusterIP: 172.30.116.127
    clusterIPs:
    - 172.30.116.127
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-postgresql
      port: 5432
      protocol: TCP
      targetPort: tcp-postgresql
    selector:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: redhat-developer-hub-helm
      app.kubernetes.io/name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: redhat-developer-hub-helm
      meta.helm.sh/release-namespace: my-ns
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    creationTimestamp: "2025-10-23T11:11:18Z"
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: redhat-developer-hub-helm
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/version: 15.4.0
      helm.sh/chart: postgresql-12.10.0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
            f:service.alpha.kubernetes.io/tolerate-unready-endpoints: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
        f:spec:
          f:clusterIP: {}
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":5432,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:publishNotReadyAddresses: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: bridge
      operation: Update
      time: "2025-10-23T11:11:18Z"
    name: redhat-developer-hub-helm-postgresql-hl
    namespace: my-ns
    resourceVersion: "40212"
    uid: 74a7b8bf-2b74-4fdc-ba2b-919cef027208
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-postgresql
      port: 5432
      protocol: TCP
      targetPort: tcp-postgresql
    publishNotReadyAddresses: true
    selector:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: redhat-developer-hub-helm
      app.kubernetes.io/name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: ServiceList
metadata:
  resourceVersion: "42035"
