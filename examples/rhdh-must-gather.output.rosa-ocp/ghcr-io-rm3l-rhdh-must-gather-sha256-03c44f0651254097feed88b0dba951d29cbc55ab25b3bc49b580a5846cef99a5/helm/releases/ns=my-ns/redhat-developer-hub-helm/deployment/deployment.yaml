apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: redhat-developer-hub-helm
    meta.helm.sh/release-namespace: my-ns
  creationTimestamp: "2025-09-11T20:53:05Z"
  generation: 1
  labels:
    app.kubernetes.io/component: backstage
    app.kubernetes.io/instance: redhat-developer-hub-helm
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: developer-hub
    helm.sh/chart: upstream-2.6.0
  name: redhat-developer-hub-helm
  namespace: my-ns
  resourceVersion: "80033"
  uid: ea4a35b3-8c07-4593-b181-5189214f6549
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: backstage
      app.kubernetes.io/instance: redhat-developer-hub-helm
      app.kubernetes.io/name: developer-hub
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/app-config: f549a3a86a292f669175bd1d7c508061e136c21c9a8d596791f5d4be6f2dcbf3
        checksum/dynamic-plugins: f1f9a92f14a31362d7eb30e67ac1458faf1c685765610f93a8967194d8bc1a5f
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: backstage
        app.kubernetes.io/instance: redhat-developer-hub-helm
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: developer-hub
        helm.sh/chart: upstream-2.6.0
    spec:
      containers:
      - args:
        - --config
        - dynamic-plugins-root/app-config.dynamic-plugins.yaml
        - --config
        - /opt/app-root/src/app-config-from-configmap.yaml
        env:
        - name: APP_CONFIG_backend_listen_port
          value: "7007"
        - name: POSTGRES_HOST
          value: redhat-developer-hub-helm-postgresql
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_USER
          value: bn_backstage
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: redhat-developer-hub-helm-postgresql
        - name: BACKEND_SECRET
          valueFrom:
            secretKeyRef:
              key: backend-secret
              name: redhat-developer-hub-helm-auth
        - name: POSTGRESQL_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgres-password
              name: redhat-developer-hub-helm-postgresql
        image: registry.redhat.io/rhdh/rhdh-hub-rhel9@sha256:0c76994fde2cd71471802d458b682ab652be5a0e291c3a2773cb524259ac79b2
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /.backstage/health/v1/liveness
            port: backend
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 4
        name: backstage-backend
        ports:
        - containerPort: 7007
          name: backend
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /.backstage/health/v1/readiness
            port: backend
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 2
          timeoutSeconds: 4
        resources:
          limits:
            cpu: "1"
            ephemeral-storage: 5Gi
            memory: 2560Mi
          requests:
            cpu: 250m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          failureThreshold: 3
          httpGet:
            path: /.backstage/health/v1/liveness
            port: backend
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 4
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/app-root/src/app-config-from-configmap.yaml
          name: backstage-app-config
          subPath: app-config.yaml
        - mountPath: /opt/app-root/src/dynamic-plugins-root
          name: dynamic-plugins-root
        - mountPath: /tmp
          name: temp
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - ./install-dynamic-plugins.sh
        - /dynamic-plugins-root
        env:
        - name: NPM_CONFIG_USERCONFIG
          value: /opt/app-root/src/.npmrc.dynamic-plugins
        - name: MAX_ENTRY_SIZE
          value: "30000000"
        image: registry.redhat.io/rhdh/rhdh-hub-rhel9@sha256:0c76994fde2cd71471802d458b682ab652be5a0e291c3a2773cb524259ac79b2
        imagePullPolicy: Always
        name: install-dynamic-plugins
        resources:
          limits:
            cpu: "1"
            ephemeral-storage: 5Gi
            memory: 2560Mi
          requests:
            cpu: 250m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /dynamic-plugins-root
          name: dynamic-plugins-root
        - mountPath: /opt/app-root/src/dynamic-plugins.yaml
          name: dynamic-plugins
          readOnly: true
          subPath: dynamic-plugins.yaml
        - mountPath: /opt/app-root/src/.npmrc.dynamic-plugins
          name: dynamic-plugins-npmrc
          readOnly: true
          subPath: .npmrc
        - mountPath: /opt/app-root/src/.config/containers
          name: dynamic-plugins-registry-auth
          readOnly: true
        - mountPath: /opt/app-root/src/.npm/_cacache
          name: npmcacache
        - mountPath: /tmp
          name: temp
        workingDir: /opt/app-root/src
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - ephemeral:
          volumeClaimTemplate:
            metadata:
              creationTimestamp: null
            spec:
              accessModes:
              - ReadWriteOnce
              resources:
                requests:
                  storage: 5Gi
              volumeMode: Filesystem
        name: dynamic-plugins-root
      - configMap:
          defaultMode: 420
          name: redhat-developer-hub-helm-dynamic-plugins
          optional: true
        name: dynamic-plugins
      - name: dynamic-plugins-npmrc
        secret:
          defaultMode: 420
          optional: true
          secretName: redhat-developer-hub-helm-dynamic-plugins-npmrc
      - name: dynamic-plugins-registry-auth
        secret:
          defaultMode: 416
          optional: true
          secretName: redhat-developer-hub-helm-dynamic-plugins-registry-auth
      - emptyDir: {}
        name: npmcacache
      - emptyDir: {}
        name: temp
      - configMap:
          defaultMode: 420
          name: redhat-developer-hub-helm-app-config
        name: backstage-app-config
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-09-11T20:55:50Z"
    lastUpdateTime: "2025-09-11T20:55:50Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-09-11T20:53:05Z"
    lastUpdateTime: "2025-09-11T20:55:50Z"
    message: ReplicaSet "redhat-developer-hub-helm-848554bbb6" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
