---
apiVersion: v1
items:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
      volume.beta.kubernetes.io/storage-provisioner: ebs.csi.aws.com
      volume.kubernetes.io/selected-node: ip-10-0-1-166.ec2.internal
      volume.kubernetes.io/storage-provisioner: ebs.csi.aws.com
    creationTimestamp: "2025-10-23T11:12:31Z"
    finalizers:
    - kubernetes.io/pvc-protection
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:volume.kubernetes.io/selected-node: {}
      manager: kube-scheduler
      operation: Update
      time: "2025-10-23T11:12:32Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:pv.kubernetes.io/bind-completed: {}
            f:pv.kubernetes.io/bound-by-controller: {}
            f:volume.beta.kubernetes.io/storage-provisioner: {}
            f:volume.kubernetes.io/storage-provisioner: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8a27900d-ae27-443f-80d8-d7743418c593"}: {}
        f:spec:
          f:accessModes: {}
          f:resources:
            f:requests:
              .: {}
              f:storage: {}
          f:volumeMode: {}
          f:volumeName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-10-23T11:12:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:accessModes: {}
          f:capacity:
            .: {}
            f:storage: {}
          f:phase: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-10-23T11:12:34Z"
    name: backstage-my-developer-hub-op-67d5df4bcc-8pmvq-dynamic-plugins-root
    namespace: my-ns
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: Pod
      name: backstage-my-developer-hub-op-67d5df4bcc-8pmvq
      uid: 8a27900d-ae27-443f-80d8-d7743418c593
    resourceVersion: "40552"
    uid: 4d2db516-0c12-4781-a738-0af9e4a05b99
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 2Gi
    storageClassName: gp3-csi
    volumeMode: Filesystem
    volumeName: pvc-4d2db516-0c12-4781-a738-0af9e4a05b99
  status:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 2Gi
    phase: Bound
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
      volume.beta.kubernetes.io/storage-provisioner: ebs.csi.aws.com
      volume.kubernetes.io/selected-node: ip-10-0-1-166.ec2.internal
      volume.kubernetes.io/storage-provisioner: ebs.csi.aws.com
    creationTimestamp: "2025-10-23T11:12:31Z"
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      rhdh.redhat.com/app: backstage-psql-my-developer-hub-op
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:volume.kubernetes.io/selected-node: {}
      manager: kube-scheduler
      operation: Update
      time: "2025-10-23T11:12:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:pv.kubernetes.io/bind-completed: {}
            f:pv.kubernetes.io/bound-by-controller: {}
            f:volume.beta.kubernetes.io/storage-provisioner: {}
            f:volume.kubernetes.io/storage-provisioner: {}
          f:labels:
            .: {}
            f:rhdh.redhat.com/app: {}
        f:spec:
          f:accessModes: {}
          f:resources:
            f:requests:
              .: {}
              f:storage: {}
          f:volumeMode: {}
          f:volumeName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-10-23T11:12:33Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:accessModes: {}
          f:capacity:
            .: {}
            f:storage: {}
          f:phase: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-10-23T11:12:33Z"
    name: data-backstage-psql-my-developer-hub-op-0
    namespace: my-ns
    resourceVersion: "40537"
    uid: d123a969-1f80-4acd-a37e-837f493b59f1
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    storageClassName: gp3-csi
    volumeMode: Filesystem
    volumeName: pvc-d123a969-1f80-4acd-a37e-837f493b59f1
  status:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 1Gi
    phase: Bound
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
      volume.beta.kubernetes.io/storage-provisioner: ebs.csi.aws.com
      volume.kubernetes.io/selected-node: ip-10-0-1-166.ec2.internal
      volume.kubernetes.io/storage-provisioner: ebs.csi.aws.com
    creationTimestamp: "2025-10-23T11:11:18Z"
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: redhat-developer-hub-helm
      app.kubernetes.io/name: postgresql
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:volume.kubernetes.io/selected-node: {}
      manager: kube-scheduler
      operation: Update
      time: "2025-10-23T11:11:18Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:pv.kubernetes.io/bind-completed: {}
            f:pv.kubernetes.io/bound-by-controller: {}
            f:volume.beta.kubernetes.io/storage-provisioner: {}
            f:volume.kubernetes.io/storage-provisioner: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
        f:spec:
          f:accessModes: {}
          f:resources:
            f:requests:
              .: {}
              f:storage: {}
          f:volumeMode: {}
          f:volumeName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-10-23T11:11:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:accessModes: {}
          f:capacity:
            .: {}
            f:storage: {}
          f:phase: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-10-23T11:11:21Z"
    name: data-redhat-developer-hub-helm-postgresql-0
    namespace: my-ns
    resourceVersion: "40267"
    uid: c8c1c331-27b5-4ebd-8d86-6475d3c918b3
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    storageClassName: gp3-csi
    volumeMode: Filesystem
    volumeName: pvc-c8c1c331-27b5-4ebd-8d86-6475d3c918b3
  status:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 1Gi
    phase: Bound
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
      volume.beta.kubernetes.io/storage-provisioner: ebs.csi.aws.com
      volume.kubernetes.io/selected-node: ip-10-0-1-102.ec2.internal
      volume.kubernetes.io/storage-provisioner: ebs.csi.aws.com
    creationTimestamp: "2025-10-23T11:11:18Z"
    finalizers:
    - kubernetes.io/pvc-protection
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:volume.kubernetes.io/selected-node: {}
      manager: kube-scheduler
      operation: Update
      time: "2025-10-23T11:11:20Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:pv.kubernetes.io/bind-completed: {}
            f:pv.kubernetes.io/bound-by-controller: {}
            f:volume.beta.kubernetes.io/storage-provisioner: {}
            f:volume.kubernetes.io/storage-provisioner: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b1308212-07da-460c-b72c-f8f1aa182e57"}: {}
        f:spec:
          f:accessModes: {}
          f:resources:
            f:requests:
              .: {}
              f:storage: {}
          f:volumeMode: {}
          f:volumeName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-10-23T11:11:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:accessModes: {}
          f:capacity:
            .: {}
            f:storage: {}
          f:phase: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-10-23T11:11:22Z"
    name: redhat-developer-hub-helm-6698c6d684-ccdhj-dynamic-plugins-root
    namespace: my-ns
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: Pod
      name: redhat-developer-hub-helm-6698c6d684-ccdhj
      uid: b1308212-07da-460c-b72c-f8f1aa182e57
    resourceVersion: "40282"
    uid: 787eb270-0d20-49b2-a99c-af07141a36e5
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 5Gi
    storageClassName: gp3-csi
    volumeMode: Filesystem
    volumeName: pvc-787eb270-0d20-49b2-a99c-af07141a36e5
  status:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 5Gi
    phase: Bound
kind: PersistentVolumeClaimList
metadata:
  resourceVersion: "42042"
